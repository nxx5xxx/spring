## Session
	
	browser(client) 가 최초로 server에 요청하면
	browser 당 하나씩 메모리 공간을 server에 할당한다
	이 메모리 영역은 browser당 하나씩 지정되고
	새로운 요청이 발생해도 같은 메모리 공간을 사용한다
	이러한 메모리 공간을 session 이라고 한다
	이 영역은 browser를 종료할 때 까지 server에서 사용할 수 있다
	
	browser가 최초로 요청(request)을 보내고
	browser 를 닫을 때 까지의 scope를 SessionScope 라고 한다
	SessionScope에서는 session 영역에 저장된 data나 객체를 자유롭게 사용할 수 있다
									ㄴ>jsp에서 sessionScope 내장 객체를 사용한다
	
	HttpSession 객체를 생성하려면 HttpServletRequest객체가 필요하다 (또는 메소드에 바로 HttpSession으로 해도 가능하다)
			//세션 객체 생성
		HttpSession session = request.getSession();
			//세션 영역에 data할당
		session.setAttribute("el로 불러올 데이터명", 데이터변수명 혹은 "을이용하여 string전송");
	
---	
	
## @SessionAttribute - 메소드에 파라미터로 넣을시

	ㄴ session 영역에 저장되어 있는 객체를 사용하려고 할 때
		메소드의 매개변수로 @SessionAttribute를 선언 하면
		session 영역에 저장된 Bean을 주입 받게 된다
		즉, session.getAttribute(~)를 안해도 된다는 것
		
		**
		보내주는컨트롤러에서 
		session.setAttribute("bean1_t", bean1);을 했다면
		받는쪽에선 이런식으로 사용이 가능하다
		public String result5(@SessionAttribute("bean1_t") TestBean1 beans) {
		System.out.println(beans.getData1());
		System.out.println(beans.getData2());
		
		즉, 세션에 bean1_t라는 이름을 갖고와 TestBean1 beans 라는 이름으로 사용해라 이런의미
		EL태그에서도 세션으로 등록한 bean1_t로 써야 쓸 수 있다
		
	ㄴ @ModelAttribute 를 통해서 주입받는 Bean은
	    자동으로 request 영역에 저장되고 request영역으로부터 주입받는다

---

## @SessionAttributes("~") - 클래스위에 어노테이션으로 지정시

	    이 경우,@ModelAttribute를 통해 주입받는 Bean을
	  @SessionAttributes로 지정하면 request 영역에 아니라,
	  session 영역에 저장되고 , session 영역으로부터 주입받는다
	
	ㄴ이 경우 @ModelAttribute 를 활용하여 객체를 생성하고 반환하는 메소드를 작성해야 한다 
				ㄴ 해당하는 메소드 위에 @ModelAttribute("~") 를 주입
	예 : 
	@ModelAttribute("sessionBean1")
	public TestBean1 sessionBean1() {
		return new TestBean1();
	}
	- return new TestBean1()에서 반환하는 객체의 주소를
	- @ModelAttribute("sessionBean1")에 지정한 "sessionBean1" 이라는 이름으로 session 영역에 저장한다는 의미
	
	@GetMapping("/test7")
	public String test7(@ModelAttribute("sessionBean1") TestBean1 sessionBean1) {
		// @ModelAttribute("sessionBean1") 
		// ㄴ"sessionBean1"을 TestBean1타입으로 session.setAttribute(sessionBean1)를 자동으로 해주는것
		// 매개변수에 TestBean1 sessionBean1 를 써줌으로써 TestBean1 sessionBean1 = new TestBean1() 까지 자동으로해줌
		sessionBean1.setData1("화면구현");
		sessionBean1.setData2("UI테스트");
		return "test7";
	}
	
	---
	
### @SessionAttributes("~") 여러개 넣고싶을시 중괄호를 이용한다
	
	예 : ({"sessionBean1", "sessionBean2"}); 
	- ModelAttribute는 request Scope영역에도 올라간다
	
	한꺼번에 올릴시
		public String test9(@ModelAttribute("sessionBean1") TestBean1 sessionBean1,
			@ModelAttribute("sessionBean2") TestBean2 sessionBean2)
	이런식으로 가능하다