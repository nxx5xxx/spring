# BoardProject2 액기스만

	Controller --> Service --> Repository(DAO)
						<--			<--
						
						
	DAO : DATABASE ACCESS OBJECT 데이터베이스 연결객체

## controller

	// 여기서 나오는 RequestMapping은 접두사이다
	@Controller
	@RequestMapping("/board")
	public class BoardController {
	
		@GetMapping("/main")
		public String boardMain() {
			return "board/main";
		}
	}

## 즉 , 이것은 아래와 같다

	@Controller
	public class BoardController {
	
		@GetMapping("/board/main")
		public String boardMain() {
			return "board/main";
		}
	}
	
---

## jsp에서

	<c:url var="root" value="/" />
	<c:set var="path1" value="${pageContext.request.contextPath }" />
	상위 두개는 같은 역할을 하고있다
	
	localhost(127.0.0.1):portnumber/projectname  이것을 ContextPath라고 한다
	Context는 프로젝트를 다른관점에서 본것
	
	<c:url 은 localhost(127.0.0.1):portnumber/projectname의미를 내포하고있는것이다
	그래서 아래 /를 빼고 ${root } 를 한것은 결국 url에 "/"를 적어준것때문
	
#### 예 )

		<li class="nav-item">
			<a href="${root }board/main" class="nav-link">자유게시판</a>
		</li>
		<li class="nav-item">
			<a href="${path1 }/board/main" class="nav-link">유머게시판</a>
		</li>

-----------------------------------------------------------------------------


# 0620

## jsp에서
	
	<input type="text" name="user_name" value="홍길동" disabled="disabled"/>
	이런식으로하면 검정박스가된다
	
## bean이 dto역할 할거임

## ojdbc 경로

	C:\oraclexe\app\oracle\product\11.2.0\server\jdbc\lib
	ojdbc6
	
	또는
	
	디벨로퍼있는곳\sqldeveloper\jdbc\lib
	ojdbc8
	
	이것을 WEB-INF lib폴더에 넣으면되는데
	만일 다른경로에있는걸 그대로 쓰고싶다면
	
	>build Path>Configure Build Path>Add External Jars
	외부경로에있는 ojdbc6.jar 선택
	
	
	배포후 작동하게끔하려면 
	Deployment Assembly > Add > Java Build Path Entries > Next > Ojdbc6.jar 선택
	
## pom.xml에서 작동하게끔하려면

			<!-- oracle driver -->
		<dependency>
		    <groupId>oracle</groupId>
		    <artifactId>ojdbc6</artifactId>
		    <version>11.2.0.3</version>
		</dependency>
		
	  </dependencies>
	  <!--// library setting -->
	  	<repositories>
			  <repository>
			    <id>oracle</id>
			    <name>ORACLE JDBC Repository</name>
			    <url>http://www.datanucleus.org/downloads/maven2/</url>
			  </repository>
		</repositories>
		
		를 추가해야한다
	
	
## 자바에서 서블릿앱컨텍스트 설정

	ServletAppContext.java에 추가
	@PropertySource("/WEB-INF/properties/db.properties")
	public class ServletAppContext implements WebMvcConfigurer {
		
		@Value("${db.classname}")
		private String dbClassname;
		
		@Value("${db.url}")
		private String dbUrl;
		
		@Value("${db.username}")
		private String dbUsername;
		
		@Value("${db.password}")
		private String dbPassword;
	
		//BasicDataSource : 데이터 베이스 접속정보를 관리하는 Bean (을 return함)
		@Bean
		public BasicDataSource dataSource() {
			BasicDataSource source = new BasicDataSource();
			source.setDriverClassName(dbClassname);
			source.setUrl(dbUrl);
			source.setUsername(dbUsername);
			source.setPassword(dbPassword);
			return source;
		};
		// Query 문과 Database 접속 정보를 관리하는 Bean을 (을 return함)
		@Bean
		public SqlSessionFactory factory(BasicDataSource source) throws Exception{
			SqlSessionFactoryBean factoryBean = new SqlSessionFactoryBean();
			factoryBean.setDataSource(source);
			SqlSessionFactory factory = factoryBean.getObject();
			return factory;
		}
		
		// Query문 실행을 위한 Bean(Mapper 관리) (을return 함)
		public MapperFactoryBean<BoardMapper> getBoardMapper(SqlSessionFactory factory) throws Exception{
			MapperFactoryBean<BoardMapper> factoryBean = new MapperFactoryBean<BoardMapper>(BoardMapper.class);
			factoryBean.setSqlSessionFactory(factory);
			return factoryBean;
			
		}
	
	이런식으로 사용한다
	
	
	
	<!-- https://mvnrepository.com/artifact/org.apache.commons/commons-dbcp2 -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-dbcp2</artifactId>
			<version>2.7.0</version>
		</dependency>
	

## XML에서 Servlet-Context.xml설정
	
	<?xml version="1.0" encoding="UTF-8"?>
	<beans:beans xmlns="http://www.springframework.org/schema/mvc"
					 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
					 xmlns:beans="http://www.springframework.org/schema/beans"
					 xmlns:context="http://www.springframework.org/schema/context"
					 xsi:schemaLocation="http://www.springframework.org/schema/mvc
					 					 http://www.springframework.org/schema/mvc/spring-mvc.xsd
					 					 http://www.springframework.org/schema/beans
					 					 http://www.springframework.org/schema/beans/spring-beans.xsd
					 					 http://www.springframework.org/schema/context
					 					 http://www.springframework.org/schema/context/spring-context.xsd">
								
			<!-- 
				scan 한 package 내부의 class 중에서
				Controller라는 annotation 이 지정된 class 들을
				Controller로 loading 함 
			-->
			<annotation-driven/>
			
			
			<!--scan할 bean 들이 모여있는 package를 지정하기 -->
	   		 <context:component-scan base-package="kr.co.tjoeun.controller"/>
	    		<context:component-scan base-package="kr.co.tjoeun.service" />
	    		<context:component-scan base-package="kr.co.tjoeun.dao" />
	    		
	   		 
	   		 <!-- Controller 의 메소드에서 반환하는 문자열의 prefix와 suffix 경로 정보 설정하기 -->
	   		 <beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
	   		 	<beans:property name="prefix" value="/WEB-INF/views/" />
	   		 	<beans:property name="suffix" value=".jsp" />
	   		 </beans:bean>
	   		 
	   		 <!-- 정적파일(jsp,사운드,이미지,js등등)경로지정 -->
	   		 <resources mapping="/**" location="/resources/" />
	   		 
	   		 <!-- properties 파일의 내용을 사용하는 Bean을 정의하기 -->
	   		 
	   		 <beans:bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer" >
	   		 	<beans:property name="location" >
	   		 		<beans:value>/WEB-INF/properties/db.properties</beans:value>
	   		 	</beans:property>
	   		 </beans:bean>	
	   		 <!-- BasicDataSource : 데이터 베이스 접속정보를 관리하는 Bean -->
	   		 <beans:bean class="org.apache.commons.dbcp2.BasicDataSource" id="basic_data_source" >
	   		 	<beans:property name="driverClassName" value="${db.classname}" />
	   		 	<beans:property name="url" value="${db.url}" />
	   		 	<beans:property name="username" value="${db.username}" />
	   		 	<beans:property name="password" value="${db.password}" />
	   		 </beans:bean>
	   		 
	   		 <!-- Query 문과 Database 접속 정보를 관리하는 Bean을 -->
	   		 <beans:bean class="org.mybatis.spring.SqlSessionFactoryBean" id="sqlSession">
	   		 	<beans:property name="dataSource" ref="basic_data_source" />
	   		 	<beans:property name="mapperLocations" value="/WEB-INF/mapper/*.xml" />
	   		 	<!-- 이부분 value대신 ref라고하심 -->
	   		 </beans:bean>
	   		 
	   		 <!-- Query문 실행을 위한 Bean(Mapper 관리) -->
	   		 <beans:bean class="org.mybatis.spring.SqlSessionTemplate" id="sqlSessionTemplate">
	   		 	<beans:constructor-arg index="0" ref="sqlSession" />
	   		 <!-- 이부분 sqlSession대신 sqlSessionTemplate라고 하심 -->
	   		 </beans:bean>
			   		 
	</beans:beans>
	
-----------

