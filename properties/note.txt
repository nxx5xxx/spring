
Properties
	application 을 개발할 때  프로그램 실행 중 변하면 안되는 값들을
	properties 파일에 작성하고 관리한다
	(WEB-INF에 properties 폴더를 만든다 > new > file > ~.properties )
	help > install new software> add
	Name은 임의설정(propertyEditor로 설정했음)
	Location에  http://propedit.sourceforge.jp/eclipse/updates 를 적고 다운로드가 다 되면
	만아래꺼 체크(PropertiesEditor)>next>next>동의>finish
	
@PropertySource : 사용할 properties 파일 하나 지정
@PropertySources : 사용할 properties 파일 여러개 지정 - 배열형태로 지정된다

@PropertySources({@PropertySource(properties파일경로1),@PropertySource(properties파일경로2)})

WEB-INF\properties\data1.properties를 붙여넣기하면 \\로 뜰텐데 /와 \\는 같은의미이다

//@PropertySources({
//@PropertySource("/WEB-INF/properties/data1.properties"),
//@PropertySource("/WEB-INF/properties/data2.properties")})
//	둘다 같은방식
//@PropertySource("/WEB-INF/properties/data1.properties")
//@PropertySource("/WEB-INF/properties/data2.properties")
// 또 다른방식
@PropertySource(value= {
		"/WEB-INF/properties/data1.properties",
		"/WEB-INF/properties/data2.properties"
		})
		
		이렇게 총 세가지 방식으로 불러올수 있다
		불러온 후
		
	//WEB-INF\properties\data1.properties속에 있는 값 사용
	@Value("${student1.number1}")
	private int number1; //프로퍼티스에서 갖고와서 바로 할당된다

	@Value("${student1.name1}")
	private String name1;//변수명은 value이름과 같지 않아도 된다
	
	이런식으로 사용이 가능하다
	
// 만일 한글로 출력이 안될경우
	window > preferences >enc검색 >content type > 우측 Text > java properties file > ISO를 UTF-8로 고치고 업데이트