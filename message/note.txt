
Message
	properties 파일을 Message로 등록해서
					ㄴ 클래스이름이 MessageSource인 객체를 사용하여 등록한다
						(ReloadableResourceBundleMessageSource)
					ㄴ 일정 시간 마다 갱신되는 
						ReloadableResourceBundleMessageSource 도 사용한다
	jsp에서도 사용하도록 한다
	다국어 처리도 가능하다
	
## JAVA방식에서 설정법
	ServletAppContext.java에서 등록하여 사용한다
	ex)
	@Bean
	public ReloadableResourceBundleMessageSource messageSource() {
		ReloadableResourceBundleMessageSource res = new ReloadableResourceBundleMessageSource();
		res.setBasename("/WEB-INF/properties/data1.properties");
		return res;
	}
	이렇게 등록해줌
	
## XML방식에서 설정법
	servlet-context.xml에서 등록하여 사용한다
	
	<!-- properties 파일을 Message에 등록하기 -->
   		 <!-- MessageSource 를 등록함 -->
   		 <beans:bean class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
   		 	<!-- <beans:property name="basename" value="/WEB-INF/properties/data1"/>
   		 	<beans:property name="basename" value="/WEB-INF/properties/data2"/> 
   		 				또는 		-->
   		 	<beans:property name="basenames">
   		 		<beans:list>
   		 			<beans:value>/WEB-INF/properties/data1</beans:value>
   		 			<beans:value>/WEB-INF/properties/data2</beans:value>
   		 		</beans:list>
   		 	</beans:property>
   		 </beans:bean>
   		 <!-- MessageSource 를 사용하기 위한 Accessor 등록하기 -->
   		 <!-- MessageSourceAccessor 라는 클래스를 bean으로 등록함 -->
   		 
   		 <beans:bean id="messageSourceAccessor" 
   		 	class="org.springframework.context.support.MessageSourceAccessor" >
   		 	<beans:constructor-arg ref="messageSource"/>	
   		 
   	</beans:bean>
   	
 	
## Message 로 등록된 data 를 Java code 에서 사용하는 경우,
		◜ReloadableResourceBundleMessageSourcee
	MessageSource 클래스를 주입 받아서 사용한다 (Autowired를 하란 말)
	ㄴ Locale 을 지정해서 다국어 처리도 가능하다